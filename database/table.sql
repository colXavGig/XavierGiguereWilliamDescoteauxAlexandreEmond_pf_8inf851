-- Table 4: Users
CREATE TABLE Users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    role VARCHAR2(20) CHECK (role IN ('user', 'clerk', 'admin')) NOT NULL,
    notification_preference NUMBER(1) DEFAULT 1 CHECK (notification_preference IN (0, 1))
);

-- Insert sample data for users
INSERT INTO Users (email, password, role, notification_preference)
VALUES 
('admin@test.com', '123', 'admin', 0),
('clerk@test.com', '123', 'clerk', 0),
('user@test.com', '123', 'user', 1);

-- Table 1: Rentable Entities
CREATE TABLE Rentable_Entities (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    category VARCHAR2(50) CHECK (category IN ('Hotel', 'Magasin', 'WC', 'Douche')) NOT NULL,
    pricing_model VARCHAR2(20) CHECK (pricing_model IN ('per_day', 'per_month', 'per_use')) NOT NULL,
    price NUMBER(10, 2) NOT NULL,
    description VARCHAR2(500), -- Optional for display purposes
    image_path VARCHAR2(255)   -- Optional for UI presentation
);

-- Table 2: Rental Logs
CREATE TABLE Rental_Logs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entity_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    rental_date DATE NOT NULL,
    start_time TIMESTAMP, -- Optional for per_use rentals
    end_time TIMESTAMP,   -- Optional for per_use rentals
    CONSTRAINT fk_rental_entity FOREIGN KEY (entity_id) REFERENCES Rentable_Entities(id),
    CONSTRAINT fk_rental_user FOREIGN KEY (user_id) REFERENCES Users(id),
    CONSTRAINT unique_daily_rentals UNIQUE (entity_id, rental_date), 
    CONSTRAINT unique_per_use_rentals UNIQUE (entity_id, rental_date, start_time)
);

-- Table 3: Receipts
CREATE TABLE Receipts (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    total_amount NUMBER(10, 2) NOT NULL,
    status VARCHAR2(20) CHECK (status IN ('pending', 'approved', 'rejected')) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_receipt_user FOREIGN KEY (user_id) REFERENCES Users(id)
);

-- Table 3.1: Receipt Line Items Subtable
CREATE TABLE Receipt_Line_Items (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    receipt_id NUMBER NOT NULL,
    entity_id NUMBER NOT NULL,
    price NUMBER(10, 2) NOT NULL,
    CONSTRAINT fk_line_item_receipt FOREIGN KEY (receipt_id) REFERENCES Receipts(id),
    CONSTRAINT fk_line_item_entity FOREIGN KEY (entity_id) REFERENCES Rentable_Entities(id)
);

                                    --       View         --
/*
Create view V_Chambre(
CHA_ID INT PRIMARY KEY,
CHA_NOM VARCHAR(75),
CHA_PRIX float,
Constraint FK_CHA_ID FOREIGN KEY (CHA_ID) REFERENCES Rentable_Entities(id)
)

Create View V_Magasin(
MAG_ID INT PRIMARY KEY,
MAG_NOM VARCHAR(75),
MAG_PRIX float,
Constraint FK_MAG_ID FOREIGN KEY (MAG_ID) REFERENCES Rentable_Entities(id)
)

Create View V_Restaurant(
RES_ID INT PRIMARY KEY,
RES_NOM VARCHAR(75),
RES_PRIX float,
Constraint FK_RES_ID FOREIGN KEY (RES_ID) REFERENCES Rentable_Entities(id)
)

Create View V_WC(
WC_ID INT PRIMARY KEY,
WC_NOM VARCHAR(75),
Constraint FK_WC_ID FOREIGN KEY (WC_ID) REFERENCES Rentable_Entities(id)
)

Create View V_Douche(
DOU_ID INT PRIMARY KEY,
DOU_NOM VARCHAR(75),
)
*/